@use "../user.config" as user;
@use "utilities" as utils;

@mixin grid {
  display: grid;

  @for $i from 0 through 12 {
    &-cols-#{$i} {
      @if $i == 0 {
        grid-template-columns: none;
      } @else {
        grid-template-columns: repeat(#{$i}, 1fr);
      }
    }
    &-rows-#{$i} {
      @if $i == 0 {
        grid-template-rows: none;
      } @else {
        grid-template-rows: repeat(#{$i}, minmax(0, 1fr));
      }
    }
  }

  &-col-auto {
    grid-column: auto;
  }
  &-col-from-auto {
    grid-column-start: auto;
  }
  &-col-to-auto {
    grid-column-end: auto;
  }
  &-row-auto {
    grid-row: auto;
  }
  &-col-from-auto {
    grid-row-start: auto;
  }
  &-col-to-auto {
    grid-row-end: auto;
  }

  @for $i from 1 through 12 {
    &-col-span-#{$i} {
      grid-column: span $i / span $i;
    }
    &-col-from-#{$i} {
      grid-column-start: $i;
    }
    &-col-to-#{$i} {
      grid-column-end: $i;
    }
    &-row-span-#{$i} {
      grid-row: span $i / span $i;
    }
    &-row-from-#{$i} {
      grid-row-start: $i;
    }
    &-row-to-#{$i} {
      grid-row-end: $i;
    }
  }

  &-flow-row {
    grid-auto-flow: row;
  }
  &-flow-col {
    grid-auto-flow: column;
  }
  &-flow-row-dense {
    grid-auto-flow: row dense;
  }
  &-flow-col-dense {
    grid-auto-flow: column dense;
  }
}

@mixin order {
  @for $i from 1 through 12 {
    &-#{$i} {
      order: $i;
    }
  }
}

@mixin gap {
  $gap-values: (
    0: 0,
    1: user.$spacer * 0.25,
    2: user.$spacer * 0.5,
    3: user.$spacer,
    4: user.$spacer * 1.5,
    5: user.$spacer * 3,
  );
  @each $key, $val in $gap-values {
    @at-root {
      &-#{$key} {
        gap: $val;
      }
    }
  }
}

.grid {
  @include utils.add-breakpoints(&) {
    @include grid();
  }
}

.order {
  @include utils.add-breakpoints(&) {
    @include order();
  }
}

.gap {
  @include utils.add-breakpoints(&) {
    @include gap();
  }
}
